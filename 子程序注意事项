/*

//子程序使用当中的注意事项： 
//1.子程序(sub)的顺序可以随便写
//2.子程序调用后，会回到调用的地方，注意执行顺序
Sub 移动()
TracePrint "我能输出吗？"   //然后执行
End Sub
TracePrint "我在子程序后面"   //首先执行
Call 移动()
TracePrint "我在call后面"    //最后执行
//3.sub()不能套用sub(),只能写在序号最外面，不能写在里面
//Exit Sub 退出子程序
//ExitScript 退出所有子程序
//4.调用子程序call()允许放在任何地方，包括子程序等
//5.注意参数的作用范围
//6.变量的作用范围
Dim a  定义一个变量a   一般是忽略的，直接拿来用了

*/

a = 300
b = 400
Call 移动点击(a + 100, b)
ExitScript 
Sub 移动点击(x,y)
TracePrint "x=" & x & "y=" & y
MoveTo x, y
End Sub



a = 300
b = 400
Call 移动点击(a + 100, b)
TracePrint "子程序外部：x=" & x & "y=" & y
ExitScript 
Sub 移动点击(x,y)
TracePrint "子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub

//子程序内部：x=400y=400
//子程序外部：x=y=

//因为子程序x和y作为一个参数，参数只在移动点击()子程序里生效，
//跑在子程序外面无效。



a = 300
b = 400
x = 100
y = 200
TracePrint "调用之前，子程序外部：x="&x&",y="&y
Call 移动点击(a + 100, b)
TracePrint "调用之后，子程序外部：x=" & x & "， y=" & y
ExitScript 
Sub 移动点击(x,y)
TracePrint "子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub

//调用之前，子程序外部x=100,y=200
//子程序内部：x=400，y=400
//调用之后，子程序外部：x=100，y=200

//在子程序里的xy是参数，不是变量。到了子程序外面xy是变量。
//变量xy和参数xy是不同的。



a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 100, b)
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 
Sub 移动点击(x,y)
TracePrint "子程序内部：a=" & a & "b=" & b
MoveTo x, y
End Sub

//调用之前，子程序外部：a=300,b=400
//子程序内部：a=300b=400
//调用之后，子程序外部：a=300， b=400

//a和b是变量，在子程序里面a和b还是变量，参数是x和y，所以在子程序里a和b还是变量，
//直接把外面的值拿来用了，调用结束后，还是变量，所以3个值是相同的。



a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 1000, b)
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 
Sub 移动点击(x, y)
Dim a , b
TracePrint "子程序内部：a=" & a & "b=" & b
TracePrint "子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub


//调用之前，子程序外部：a=300,b=400
//子程序内部：a=b=
//子程序内部：x=1300y=400
//调用之后，子程序外部：a=300， b=400




a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 1000, b)
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 
Sub 移动点击(x, y)
Dim a, b
a = 500
b = 600
TracePrint "调用中，子程序内部：a=" & a & "b=" & b
TracePrint "调用中，子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub


//调用之前，子程序外部：a=300,b=400
//调用中，子程序内部：a=500b=600
//调用中，子程序内部：x=1300y=400
//调用之后，子程序外部：a=300， b=400

//子程序里定义ab后，在子程序外面，ab的值始终是300,400，在子程序里面ab的值
//是500,600，它只对里面有效。


//定义了a和b，在移动点击范围内做一个全新的变量，那么在里面的所有变量，不会
//被外面干扰到，不管外面的值如何改变，里面的值管里面自己的。

//调用之前，子程序外部：a=300,b=400
//调用中，子程序内部：a=500b=600
//调用中，子程序内部：x=1300y=400
//调用之后，子程序外部：a=500， b=600

//子程序里取消定义ab后。



Dim a, b

a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 1000, b)
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 
Sub 移动点击(x, y)

a = 500
b = 600
TracePrint "调用中，子程序内部：a=" & a & "b=" & b
TracePrint "调用中，子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub


//调用之前，子程序外部：a=300,b=400
//调用中，子程序内部：a=500b=600
//调用中，子程序内部：x=1300y=400
//调用之后，子程序外部：a=500， b=600

//在外面定义了ab变量，就是告诉脚本，a和b整个脚本生效，它是个主脚本变量，
//在外面定义不定义没区别，都是直接拿来用的。



For i = 1 To 10
TracePrint "子程序外面的i=" & i
Call 逐行扫描()
Next
Sub 逐行扫描()
Dim i                  //扫描一次和10次循环就是在于子程序里是否定义了这个i变量
For i = 100 To 110
TracePrint "子程序里面的i="&i
Next
End Sub




Dim a, b

a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 1000, b)
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 
Sub 移动点击(x, y)
Dim a, b
a = 500
b = 600
TracePrint "调用中，子程序内部：a=" & a & "b=" & b
TracePrint "调用中，子程序内部：x=" & x & "y=" & y
MoveTo x, y
End Sub

//调用之前，子程序外部：a=300,b=400
//调用中，子程序内部：a=500b=600
//调用中，子程序内部：x=1300y=400
//调用之后，子程序外部：a=300， b=400

//在外面定义和不定义是一个样的，子程序里定义了只在里面有效。
//外面一般不定义，只在里面定义。

//不同的子程序可以定义相同的变量，比如在不同的子程序定义相同的a和b
//变量，互不影响。




a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 100, b)
Call 键盘操作()
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 

Sub 移动点击(x, y)
Dim a, b
a = 500
b = 600
TracePrint "移动点击调用中，子程序内部：a=" & a & "b=" & b
MoveTo x, y
End Sub

Sub 键盘操作()
Dim a, b
a = 700
b = 800
TracePrint "键盘操作调用中，子程序内部:a="&a&",b="&b
End Sub


//调用之前，子程序外部：a=300,b=400
//移动点击调用中，子程序内部：a=500b=600
//键盘操作调用中，子程序内部:a=700,b=800
//调用之后，子程序外部：a=300， b=400



a = 300
b = 400

x = 100
y = 200
TracePrint "调用之前，子程序外部：a="&a&",b="&b
Call 移动点击(a + 100, b)
Call 键盘操作()
TracePrint "调用之后，子程序外部：a=" & a & "， b=" & b
ExitScript 

Sub 移动点击(x, y)
Dim a, b
a = 500
b = 600
TracePrint "移动点击调用中，子程序内部：a=" & a & "b=" & b
MoveTo x, y
End Sub

Sub 键盘操作()
//	Dim a, b
a = 700
b = 800
TracePrint "键盘操作调用中，子程序内部:a="&a&",b="&b
End Sub


//调用之前，子程序外部：a=300,b=400
//移动点击调用中，子程序内部：a=500b=600
//键盘操作调用中，子程序内部:a=700,b=800
//调用之后，子程序外部：a=700， b=800

//键盘操作里没有定义ab，键盘操作里ab一旦修改也会影响到外面的ab修改。

